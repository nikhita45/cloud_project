# -*- coding: utf-8 -*-
"""App.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NzA6hNxzRsd8Y8QTcWYe0J4Z3MmttyMH
"""

import json
import os
import boto3
from google.cloud import vision
import io
from flask import Flask, request, render_template,url_for
from flask_cors import cross_origin
from werkzeug.utils import secure_filename
import six
from google.cloud import translate_v2 as translate
# Imports the Google Cloud client library

os.environ["GOOGLE_APPLICATION_CREDENTIALS"]="â€ªC:/Users/nikks/Downloads/qwiklabs-gcp-02-87f03aec5314-6cd7e4f9408e.json"

app = Flask(__name__)

@app.route("/")
@cross_origin()
def home():
    return render_template("index.html")

@app.route("/detect", methods = ["GET", "POST"])
@cross_origin()
def detect():
	if request.method == "POST":
		img = request.files['file']  
		filename = secure_filename(img.filename)
		img.save(os.path.join('static/uploads',filename))
		img_path = os.path.join('static/uploads',filename)
		client = vision.ImageAnnotatorClient()
  
    with io.open(img_path, 'rb') as image_file:
        content = image_file.read()

    image = vision.Image(content=content)
    response = client.text_detection(image=image)
    texts = response.text_annotations
    text = 'Texts:'

    for txt in texts:
        text = text + str('\n"{}"'.format(txt.description))

        vertices = (['({},{})'.format(vertex.x, vertex.y)
                    for vertex in txt.bounding_poly.vertices])

        text = text + str('bounds: {}'.format(','.join(vertices)))

    if response.error.message:
        
          text = str('{}\nSome Error has occured'.format(response.error.message))

    translate_client = translate.Client()

    if isinstance(text, six.binary_type):
        text = text.decode("utf-8")

    # Text can also be a sequence of strings, in which case this method
    # will return a sequence of results for each text.
    result = translate_client.translate(text, target_language="en")

	return render_template("index.html",text=text, original_text = result["input"], language = result["detectedSourceLanguage"], English_text = result["translatedText"])


if __name__ == "__main__":
    app.run(debug=True)